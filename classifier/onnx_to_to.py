import os
import subprocess

# –ü—É—Ç—å –∫ ONNX-–º–æ–¥–µ–ª–∏
onnx_model_path = "model1.onnx"

# –ü–∞–ø–∫–∞, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π TensorFlow –∏ TFLite
output_dir = "onnx2tf_out"

# –ö–æ–º–∞–Ω–¥–∞ onnx2tf: –∫–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ –ø–æ–¥ int8 –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Edge TPU
command = [
    "onnx2tf",
    "-i", onnx_model_path,
    "--output_folder", output_dir,
    "--output_format", "tflite",
    "--vital",                   # —Ä–µ–∂–∏–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Edge TPU
    "--quant_type", "int8",      # –∫–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ –≤ INT8
    "--overwrite_output"         # –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –µ—Å–ª–∏ –µ—Å—Ç—å
]

# –ó–∞–ø—É—Å–∫
print("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è ONNX ‚Üí TFLite (Edge TPU)...")
subprocess.run(command, check=True)

# –ü—É—Ç—å –∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
tflite_model_path = os.path.join(output_dir, "model_float32_full_integer_quant.tflite")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è tflite-—Ñ–∞–π–ª–∞
if os.path.exists(tflite_model_path):
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: –º–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {tflite_model_path}")
else:
    print("‚ùå –û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏.")
